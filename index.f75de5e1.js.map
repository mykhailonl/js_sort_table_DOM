{"mappings":"AAAA;AAEA,MAAM,YAAY;OAAI,SAAS,gBAAgB,CAAC;CAAc;AAE9D,MAAM,gBAAgB;OAAI,SAAS,gBAAgB,CAAC;CAAmB;AACvE,MAAM,QAAQ,SAAS,aAAa,CAAC;AAErC,MAAM,YAAY,CAAC,QAAQ;IACzB,OAAQ;QACN,KAAK;YACH,WAAW,IAAI,CAAC,CAAC,OAAO;gBACtB,MAAM,QAAQ,MAAM,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,WAAW;gBAClD,MAAM,QAAQ,MAAM,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,WAAW;gBAElD,OAAO,MAAM,aAAa,CAAC;YAC7B;YAEA;QACF,KAAK;YACH,WAAW,IAAI,CAAC,CAAC,OAAO;gBACtB,MAAM,YAAY,MAAM,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,WAAW;gBACtD,MAAM,YAAY,MAAM,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,WAAW;gBAEtD,OAAO,UAAU,aAAa,CAAC;YACjC;YAEA;QAEF,KAAK;YACH,WAAW,IAAI,CAAC,CAAC,OAAO;gBACtB,MAAM,eAAe,MAAM,KAAK,CAAC,EAAE,CAAC,SAAS;gBAC7C,MAAM,gBAAgB,MAAM,KAAK,CAAC,EAAE,CAAC,SAAS;gBAE9C,OAAO,OAAO,gBAAgB,OAAO;YACvC;YAEA;QAEF,KAAK;YACH,WAAW,IAAI,CAAC,CAAC,OAAO;gBACtB,MAAM,cAAc,MAAM,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,KAAK;gBACnE,MAAM,cAAc,MAAM,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,KAAK;gBAEnE,OAAO,OAAO,eAAe,OAAO;YACtC;YAEA;QAEF;YACE;IACJ;IAEA,OAAO;AACT;AAEA,cAAc,OAAO,CAAC,CAAC;IACrB,qCAAqC;IACrC,OAAO,gBAAgB,CAAC,SAAS,CAAC;QAChC,MAAM,SAAS,GAAG;QAElB,MAAM,WAAW,SAAS,sBAAsB;QAChD,MAAM,SAAS,UAAU,MAAM,aAAa,CAAC,SAAS,EAAE;QAExD,OAAO,OAAO,CAAC,CAAC;YACd,SAAS,MAAM,CAAC;QAClB;QAEA,MAAM,WAAW,CAAC;IACpB;AACF","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst employees = [...document.querySelectorAll('tbody > tr')];\n\nconst sortingParams = [...document.querySelectorAll('thead > tr > th')];\nconst tbody = document.querySelector('tbody');\n\nconst sortingFn = (sortBy, dataToSort) => {\n  switch (sortBy) {\n    case 'Name':\n      dataToSort.sort((emplA, emplB) => {\n        const nameA = emplA.cells[0].innerText.toLowerCase();\n        const nameB = emplB.cells[0].innerText.toLowerCase();\n\n        return nameA.localeCompare(nameB);\n      });\n\n      break;\n    case 'Position':\n      dataToSort.sort((emplA, emplB) => {\n        const positionA = emplA.cells[1].innerText.toLowerCase();\n        const positionB = emplB.cells[1].innerText.toLowerCase();\n\n        return positionA.localeCompare(positionB);\n      });\n\n      break;\n\n    case 'Age':\n      dataToSort.sort((emplA, emplB) => {\n        const firstEmplAge = emplA.cells[2].innerText;\n        const secondEmplAge = emplB.cells[2].innerText;\n\n        return Number(firstEmplAge) - Number(secondEmplAge);\n      });\n\n      break;\n\n    case 'Salary':\n      dataToSort.sort((emplA, emplB) => {\n        const emplASalary = emplA.cells[3].innerText.slice(1).replace(',', '');\n        const emplBSalary = emplB.cells[3].innerText.slice(1).replace(',', '');\n\n        return Number(emplASalary) - Number(emplBSalary);\n      });\n\n      break;\n\n    default:\n      break;\n  }\n\n  return dataToSort;\n};\n\nsortingParams.forEach((header) => {\n  // eslint-disable-next-line no-shadow\n  header.addEventListener('click', (event) => {\n    tbody.innerHTML = '';\n\n    const fragment = document.createDocumentFragment();\n    const sorted = sortingFn(event.currentTarget.innerText, employees);\n\n    sorted.forEach((row) => {\n      fragment.append(row);\n    });\n\n    tbody.appendChild(fragment);\n  });\n});\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}